{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16477\\\\Documents\\\\Portfolio2.0\\\\my-app\\\\src\\\\components\\\\Portfolio.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Portfolio() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n  // return (    <form onSubmit={handleSubmit(onSubmit)}>\n  //   {/* register your input into the hook by invoking the \"register\" function */}\n  //   <input defaultValue=\"test\" {...register(\"example\")} />\n\n  //   {/* include validation with required or other standard HTML validation rules */}\n  //   <input {...register(\"exampleRequired\", { required: true })} />\n  //   {/* errors will return when field validation fails  */}\n  //   {errors.exampleRequired && <span>This field is required</span>}\n\n  //   <input type=\"submit\" />\n  // </form> );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    color: \"blue\",\n    className: \"container border\",\n    style: {\n      marginTop: \"50px\",\n      width: '50%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"--form-control --card --flex-center --dir-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"user_name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        name: \"user_name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"user_email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"user_email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n}\n_s(Portfolio, \"77WzwRY2adCYNFA0cLnNubMUW6o=\", false, function () {\n  return [useForm];\n});\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","Portfolio","_s","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","color","className","style","marginTop","width","children","for","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","required","cols","rows","value","_c","$RefreshReg$"],"sources":["C:/Users/16477/Documents/Portfolio2.0/my-app/src/components/Portfolio.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Portfolio() {\r\n      const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n\r\n  console.log(watch(\"example\")); // watch input value by passing the name of it\r\n    // return (    <form onSubmit={handleSubmit(onSubmit)}>\r\n    //   {/* register your input into the hook by invoking the \"register\" function */}\r\n    //   <input defaultValue=\"test\" {...register(\"example\")} />\r\n      \r\n    //   {/* include validation with required or other standard HTML validation rules */}\r\n    //   <input {...register(\"exampleRequired\", { required: true })} />\r\n    //   {/* errors will return when field validation fails  */}\r\n    //   {errors.exampleRequired && <span>This field is required</span>}\r\n      \r\n    //   <input type=\"submit\" />\r\n    // </form> );\r\n    return (            <div color='blue' className=\"container border\"\r\n                style={{\r\n                    marginTop: \"50px\",\r\n                width:'50%'}}>\r\n                <form className=\"--form-control --card --flex-center --dir-column\" >\r\n                    <label for=\"user_name\" >Name</label>\r\n                    <input type=\"text\" placeholder='Full Name' name=\"user_name\" required />\r\n                    <label for=\"user_email\">Email</label>\r\n                    <input type=\"email\" placeholder=\"Email\" name=\"user_email\" required/>\r\n                    <label>Message</label>\r\n                    <textarea name=\"message\" cols=\"30\" rows=\"10\"/>\r\n                    <input type=\"submit\" value=\"Send\" />\r\n                </form>\r\n            </div>);\r\n}\r\n\r\nexport default Portfolio;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC9E,MAAMU,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAE1CC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7B;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBAAoBL,OAAA;IAAKY,KAAK,EAAC,MAAM;IAACC,SAAS,EAAC,kBAAkB;IACtDC,KAAK,EAAE;MACHC,SAAS,EAAE,MAAM;MACrBC,KAAK,EAAC;IAAK,CAAE;IAAAC,QAAA,eACbjB,OAAA;MAAMa,SAAS,EAAC,kDAAkD;MAAAI,QAAA,gBAC9DjB,OAAA;QAAOkB,GAAG,EAAC,WAAW;QAAAD,QAAA,EAAE;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,WAAW;QAACC,IAAI,EAAC,WAAW;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEtB,OAAA;QAAOkB,GAAG,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCtB,OAAA;QAAOuB,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACC,IAAI,EAAC,YAAY;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpEtB,OAAA;QAAAiB,QAAA,EAAO;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBtB,OAAA;QAAUyB,IAAI,EAAC,SAAS;QAACE,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9CtB,OAAA;QAAOuB,IAAI,EAAC,QAAQ;QAACM,KAAK,EAAC;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAClB;AAACpB,EAAA,CA9BQD,SAAS;EAAA,QACqDH,OAAO;AAAA;AAAAgC,EAAA,GADrE7B,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}